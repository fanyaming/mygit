<!DOCTYPE mapper
  	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fym.ssm.mapper.EmployeeMapper">
	<resultMap type="Employee" id="base_mapper">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="password" column="password"/>
		<result property="email" column="email"/>
		<result property="age" column="age"/>
		<result property="admin" column="admin"/>
		<association property="dept" javaType="Department">
			<result property="id" column="did"/>
			<result property="name" column="dname"/>
		</association>
		<collection property="roles" ofType="Role">
			<id property="id" column="rid"/>
			<result property="name" column="rname"/>
			<result property="sn" column="rsn"/>
		</collection>
	</resultMap>
	<sql id="conditions_sql">
		<where>
			<if test="keywords!=null and keywords!=''">
				(
				e.name like concat('%',#{keywords},'%')
				or
				e.email like concat('%',#{keywords},'%')
				)
			</if>
			<if test="deptId!=null and deptId!= -1">
				and e.dept_id = #{deptId}
			</if>
		</where>
	</sql>
	<insert id="save" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into employee (name,password,email,age,admin,dept_id)
				VALUES (#{name},#{password},#{email},#{age},#{admin},#{dept.id})
	</insert>
	<delete id="delete">
		delete from employee where id = #{id}
	</delete>
	
	<update id="update">
		update employee
		<set>
			<if test="name!=null">
				name=#{name},
			</if>
			<if test="password!=null">
				password=#{password},
			</if>
			<if test="email!=null">
				email=#{email},
			</if>
			<if test="age!=null">
				age=#{age},
			</if>
			<if test="admin!=null">
				admin=#{admin}
			</if>
		</set>
		where id=#{id}
	</update>
	
	<select id="get" resultMap="base_mapper">
		select e.*,d.id did,d.name dname,r.id rid,r.name rname,r.sn rsn
		from  employee e
			LEFT JOIN department d ON  e.dept_id=d.id
			LEFT JOIN employees_roles er ON e.id=er.employee_id
			LEFT JOIN role r ON r.id=er.role_id
		where e.id =#{id}
	</select>
	<select id="list" resultMap="base_mapper">
		select e.*,d.id did,d.name dname
		from  employee e  left JOIN department d ON  e.dept_id=d.id
	</select>
	<select id="getListData" resultMap="base_mapper">
		select e.*,d.id did,d.name dname
		from  employee e  left JOIN department d ON  e.dept_id=d.id
		<include refid="conditions_sql"/>
		limit #{beginIndex},#{pageSize}
	</select>
	<select id="getTotalCount" resultType="long">
		select count(*)
		from  employee e
		<include refid="conditions_sql"/>
	</select>
	<update id="deleteRelation">
		update employee e SET e.dept_id=NULL WHERE e.dept_id=#{deptId}
	</update>
	<insert id="saveRelation">
		INSERT  INTO employees_roles VALUES (#{empId},#{roleId})
	</insert>
	<delete id="deleteRoleRelation">
		DELETE FROM employees_roles WHERE employee_id=#{id}
	</delete>
	<select id="checkLogin" resultMap="base_mapper">
		select e.*,r.id rid,r.name rname,r.sn rsn from employee e
			LEFT JOIN role r ON e.role_id=r.id
		WHERE e.name=#{username} AND e.password=#{password}
	</select>
</mapper>